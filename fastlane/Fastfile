# fastlane/Fastfile
default_platform :ios

platform :ios do
  before_all do
    setup_circle_ci
  end

  app_store_connect_api_key( 
    key_id: "CR96XLDU4C", 
    issuer_id: "2238b1f9-ee8c-4f2d-8894-819a9e8fc5d2",
    key_content: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR1RBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJIa3dkd0lCQVFRZ05DOFgyb3l1NC9YbklFdWUKWndrNXNyU3lsSkdEL2ZZSHgxb05zTzdOeEd1Z0NnWUlLb1pJemowREFRZWhSQU5DQUFRdnZzdXdYeFF3aEZtbQo5N3pyRVQ3WXZzWXRPSmlHSGdweWc2NG8yVXlrSFFhanUzMiszVng3aFJ5T2V5eU4zZ0ZTQk45MCtMQzM3U0FICisrQThhRytBCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=",
    is_key_content_base64: true,  
    in_house: false  
  )

  desc "Runs all the tests"
  lane :test do
    # scan(
    #   include_simulator_logs: false
    # )
  swiftlint(
    mode: :lint,      # SwiftLint mode: :lint (default) or :autocorrect
    output_file: "swiftlint.result.json", 
    executable: "./Pods/SwiftLint/swiftlint",
    raise_if_swiftlint_error: true 
  )
  end

  desc "Ad-hoc build"
  lane :adhoc do
    match(type: "adhoc")
    gym(export_method: "ad-hoc")
  end

  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    match(
    readonly: true
    )
  end

  desc 'Fetch code signing secrets. Build the iOS application.'
  lane :build do
    certificates
    increment_build_number({
       build_number: latest_testflight_build_number + 1
     })
    gym(
      export_method: 'app-store'
    )
  end

  desc "Upload to TestFlight"
  lane :beta do
    app_store_connect_api_key(
      is_key_content_base64: true,
    )
    pilot 
  end

end